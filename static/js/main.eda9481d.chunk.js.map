{"version":3,"sources":["types/Filters.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","helpers.ts","index.tsx"],"names":["Filters","TodoList","todos","setSelectedTodo","selectedTodo","className","map","todo","id","completed","cn","title","type","onClick","handleSelect","TodoFilter","setFilter","query","setQuery","onChange","e","target","value","all","active","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","useEffect","userId","href","name","App","setTodos","filter","render","useRef","isFirstRender","current","preparedTodos","useMemo","filteredTodos","toLowerCase","includes","trim","prepareTodos","ref","length","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.eda9481d.chunk.js","sourcesContent":["export enum Filters {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  setSelectedTodo: (arg: Todo | null) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  const handleSelect = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span\n                  className=\"icon\"\n                  data-cy=\"iconCompleted\"\n                >\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn('has-text-success', {\n                  'has-text-danger': !todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleSelect(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far',\n                    { 'fa-eye-slash': selectedTodo === todo },\n                    { 'fa-eye': selectedTodo !== todo })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Filters } from '../../types/Filters';\n\ntype Props = {\n  setFilter: (arg: string) => void;\n  query: string;\n  setQuery: (arg: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilter,\n  query,\n  setQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => setFilter(e.target.value)}\n          >\n            <option value={Filters.all}>All</option>\n            <option value={Filters.active}>Active</option>\n            <option value={Filters.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            >\n              Clear\n            </button>\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo | null;\n  setSelectedTodo: (arg: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(setUser);\n    }\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo?.id}`}\n              </div>\n\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => setSelectedTodo(null)}\n              >\n                Select Todo\n              </button>\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                <strong\n                  className={cn('has-text-success', {\n                    'has-text-danger': !selectedTodo?.completed,\n                  })}\n                >\n                  {!selectedTodo?.completed ? 'Planned' : 'Done'}\n                </strong>\n\n                {' by '}\n\n                <a href=\"mailto:Sincere@april.biz\">\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport './App.scss';\nimport { prepareTodos } from './helpers';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState('all');\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  const render = useRef(null);\n\n  const isFirstRender = render.current === null;\n\n  const preparedTodos = useMemo(() => prepareTodos({\n    todos,\n    query,\n    filter,\n  }), [todos, filter, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilter={setFilter}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div\n              className=\"block\"\n              ref={render}\n            >\n              {!preparedTodos.length && isFirstRender ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={preparedTodos}\n                  setSelectedTodo={setSelectedTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import { Filters } from './types/Filters';\nimport { Todo } from './types/Todo';\n\ntype Arguments = {\n  todos: Todo[];\n  query: string;\n  filter: string;\n};\n\nexport const prepareTodos = ({\n  todos,\n  query,\n  filter,\n}: Arguments): Todo[] => {\n  let filteredTodos = todos;\n\n  if (query) {\n    filteredTodos = filteredTodos.filter(todo => (\n      todo.title.toLowerCase().includes(query.toLowerCase().trim())\n    ));\n  }\n\n  if (filter) {\n    switch (filter) {\n      case Filters.completed:\n        return filteredTodos.filter(todo => todo.completed);\n\n      case Filters.active:\n        return filteredTodos.filter(todo => !todo.completed);\n\n      default:\n        return filteredTodos;\n    }\n  }\n\n  return filteredTodos;\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}